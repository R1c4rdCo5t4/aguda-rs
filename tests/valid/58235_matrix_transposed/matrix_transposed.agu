-- Author: 58235, AntÃ³nio Almeida

let transpose (m) : Int[][] -> Int[][] =
    let r : Int = length(m);
    let c : Int = length(m[0]);

    let tm : Int[][] = new Int[] [c | new Int [r | 0]];

    let i : Int = 0;
    while i < r do (
        let j : Int = 0;
        while j < c do (
            set tm[j][i] = m[i][j];
            set j = j + 1
        );
        set i = i + 1
    );
    tm

let printMatrix (a) : Int[][]-> Unit =
    let i : Int = 0 ;
    while i < length(a) do (
        let j : Int = 0;
        while j < length(a[0]) do (
            print(a[i][j]) ; print(" ") ;
            set j = j + 1
        );
        print("\n") ;   
        set i = i + 1
    )


let _ : Unit =
    let m : Int[][] = new Int[] [4 | new Int [2 | 0]];

    set m[0] = new Int [2 | 0];
    set m[1] = new Int [2 | 1];
    set m[2] = new Int [2 | 2];
    set m[3] = new Int [2 | 3];

    printMatrix(transpose(m))


